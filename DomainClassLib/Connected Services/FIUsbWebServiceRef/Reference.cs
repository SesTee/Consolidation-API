//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using CommonLib;

namespace FIUsbWebServiceRef
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://webservice.fiusb.ci.infosys.com", ConfigurationName="FIUsbWebServiceRef.FIUsbWebService")]
    public interface FIUsbWebService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<FIUsbWebServiceRef.executeServiceResponse> executeServiceAsync(FIUsbWebServiceRef.executeServiceRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="executeService", WrapperNamespace="http://webservice.fiusb.ci.infosys.com", IsWrapped=true)]
    public partial class executeServiceRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string arg_0_0;
        
        public executeServiceRequest()
        {
        }
        
        public executeServiceRequest(string arg_0_0)
        {
            this.arg_0_0 = arg_0_0;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="executeServiceResponse", WrapperNamespace="http://webservice.fiusb.ci.infosys.com", IsWrapped=true)]
    public partial class executeServiceResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string executeServiceReturn;
        
        public executeServiceResponse()
        {
        }
        
        public executeServiceResponse(string executeServiceReturn)
        {
            this.executeServiceReturn = executeServiceReturn;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    public interface FIUsbWebServiceChannel : FIUsbWebServiceRef.FIUsbWebService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    public partial class FIUsbWebServiceClient : System.ServiceModel.ClientBase<FIUsbWebServiceRef.FIUsbWebService>, FIUsbWebServiceRef.FIUsbWebService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public FIUsbWebServiceClient() : 
                base(FIUsbWebServiceClient.GetDefaultBinding(), FIUsbWebServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.FIUsbWebService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FIUsbWebServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(FIUsbWebServiceClient.GetBindingForEndpoint(endpointConfiguration), FIUsbWebServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FIUsbWebServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(FIUsbWebServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FIUsbWebServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(FIUsbWebServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FIUsbWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FIUsbWebServiceRef.executeServiceResponse> FIUsbWebServiceRef.FIUsbWebService.executeServiceAsync(FIUsbWebServiceRef.executeServiceRequest request)
        {
            return base.Channel.executeServiceAsync(request);
        }
        
        public System.Threading.Tasks.Task<FIUsbWebServiceRef.executeServiceResponse> executeServiceAsync(string arg_0_0)
        {
            FIUsbWebServiceRef.executeServiceRequest inValue = new FIUsbWebServiceRef.executeServiceRequest();
            inValue.arg_0_0 = arg_0_0;
            return ((FIUsbWebServiceRef.FIUsbWebService)(this)).executeServiceAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.FIUsbWebService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.FIUsbWebService))
            {
               // return new System.ServiceModel.EndpointAddress("https://uatwas.wemabank.local:8443/fiwebservice/FIWebService");
                return new System.ServiceModel.EndpointAddress(Utility.AppConfiguration().GetSection("Finacle").GetSection("ServiceURL").Value);
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return FIUsbWebServiceClient.GetBindingForEndpoint(EndpointConfiguration.FIUsbWebService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return FIUsbWebServiceClient.GetEndpointAddress(EndpointConfiguration.FIUsbWebService);
        }
        
        public enum EndpointConfiguration
        {
            
            FIUsbWebService,
        }
    }
}
